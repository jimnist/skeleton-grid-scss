// /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
// SCSS version of v1.2 of the Skeleton Grid (http://www.getskeleton.com/)
// Skeleton grid originally authored by Dave Gamache.
//
// https://github.com/ngn33r/skeleton-grid-scss
//
// @author jim nist
// @copyright Copyright (c) 2013 engine-earring.com
// @license MIT
// @version 0.0.2
//

@function strip-units($number) {
  @return $number / ($number * 0 + 1);
}

// Converts a number from 0 to 100 to the English word
// string numToString ( number $int )
@function numToString($int) {
  // set up lists
  $ones: "one", "two", "three", "four", "five", "six", "seven", "eight", "nine";
  $teens: "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen";
  $tens: "", "twenty", "thirty", "fourty", "fifty", "sixty", "seventy", "eighty", "nintey";

  $int: abs($int); // no nonnegative numbers
  $number: "";
  $temp: $int / 10;
  $temp: floor($temp);
  @if($int >= 1 and $int <= 100) {
    @if($temp < 1) { // it's a one!
      $number: nth($ones, $int % 10);
    }
    @if($temp == 1) { // in the teen range
      @if($int % 10 == 0) {
        $number: "ten";
      } @else {
        $number: nth($teens, $int % 10);
      }
    }
    @if($temp >= 2 and $temp <= 9) { // more than our teens
      @if($int % 10 == 0) {
        // means it's a number evenly divisible by 10
        $number: nth($tens, $int / 10);
      } @else {
        $number: "#{nth($tens, floor($int / 10))}-#{nth($ones, $int % 10)}";
      }
    }
    @if($temp == 10) { // this is the end...
      $number: "one-hundred";
    }
  } @else {
    $number: "Invalid parameter passed. Number must be between 1 and 100."
  }
  @return $number;
}