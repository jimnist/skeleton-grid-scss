// /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\
// SCSS version of v1.2 of the Skeleton Grid (http://www.getskeleton.com/)
// Skeleton grid originally authored by Dave Gamache.
//
// https://github.com/ngn33r/skeleton-grid-scss
//
// @author jim nist
// @copyright Copyright (c) 2013 engine-earring.com
// @license MIT
// @version 0.0.2
//

@import 'variables';
@import 'functions';
@import 'mixins';

/* #Base #{$base-width} Grid
================================================== */

.container {
  position: relative; width: $base-width; margin: 0 auto; padding: 0;
  .column, .columns {
    float: left;
    display: inline;
    margin-left: $grid-margin;
    margin-right: $grid-margin;
  }
}
.row { margin-bottom: 20px; }

/* Nested Column Classes */
.column.alpha, .columns.alpha { margin-left: 0; }
.column.omega, .columns.omega { margin-right: 0; }

@include _grid($base-width);

/* #Tablet (Portrait)
================================================== */

/* Note: Design for a width of #{$tablet-width} */
@media #{$tablet} {
  .container {
    width: $tablet-width;
    .column, .columns {
      margin-left: $grid-margin;
      margin-right: $grid-margin;
    }
  }
  .column.alpha, .columns.alpha { margin-left: 0; margin-right: $grid-margin; }
  .column.omega, .columns.omega { margin-right: 0; margin-left: $grid-margin; }
  .alpha.omega { margin-left: 0; margin-right: 0; }

  @include _grid($tablet-width);
}

/*  #All Mobile
================================================== */
@media #{$smaller-than-tablet} {
  @include _mobile-offsets;
}

/*  #Mobile (Portrait)
================================================== */

/* Note: Design for a width of #{$mobile-portrait-width} */
@media #{$mobile-portrait} {
  .container {
    width: $mobile-portrait-width;
    .columns, .column { margin: 0; }
  }
  @include _mobile-columns($mobile-portrait-width);
}

/* #Mobile (Landscape)
================================================== */

/* Note: Design for a width of #{$mobile-landscape-width} */
@media #{$mobile-landscape} {
  .container {
    width: $mobile-landscape-width;
    .columns, .column { margin: 0; }
  }
  @include _mobile-columns($mobile-landscape-width);
}

/* #Clearing
================================================== */

/* Self Clearing Goodness */
.container:after { content: "\0020"; display: block; height: 0; clear: both; visibility: hidden; }

/* Use clearfix class on parent to clear nested columns,
or wrap each row of columns in a <div class="row"> */
.clearfix:before,
.clearfix:after,
.row:before,
.row:after {
  content: '\0020';
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0; }
.row:after,
.clearfix:after {
  clear: both; }
.row,
.clearfix {
  zoom: 1; }

/* You can also use a <br class="clear" /> to clear columns */
.clear {
  clear: both;
  display: block;
  overflow: hidden;
  visibility: hidden;
  width: 0;
  height: 0;
}
